[common]
#fprs的地址
server_addr = 0.0.0.0
server_port = 7000

# 如果你想通过HTTP代理连接frps, 你可以在这里或在全局环境变量中设置http_proxy
# 它只在tcp时才起作用
# http_proxy = http://user:pwd@192.168.1.128:8080

# frpc的日志文件在服务器上的地址 例如 ./frpc.log
log_file = ./frpc.log

# 日志文件的等级：trace, debug, info, warn, error
log_level = info

log_max_days = 3

# token码
privilege_token = 12345678

# 设置通过http管理frpc的地址，例如可以重新加载 reload
admin_addr = 127.0.0.1
admin_port = 7400
admin_user = admin
admin_pwd = admin

# 连接将提前建立，默认值为零
pool_count = 5

# if tcp stream multiplexing is used, default is true, it must be same with frps
tcp_mux = true

# 您的代理名称将更改为 {user}.{proxy}
user = your_name

# 第一次连接失败时退出程序, 否则重新登录
# 默认 true 是退出程序
login_fail_exit = true

# 用于连接服务器的通讯协议
# 现在它支持tcp和kcp，默认是tcp
protocol = tcp

# proxy names you want to start divided by ','
# default is empty, means all proxies
# start = ssh,dns

# heartbeat 设置, 不建议修改默认值
# 默认值 heartbeat_interval的是10，heartbeat_timeout是 90
# heartbeat_interval = 30
# heartbeat_timeout = 90

# ssh is the proxy name same as server's configuration
# 如果[common]部分中的用户不为空, 它将被更改为{user}.{proxy} ，例如 your_name.ssh
[ssh]
# 连接类型：tcp | udp | http | https, 默认是 tcp
type = tcp
local_ip = 127.0.0.1
local_port = 22
# true 或r false, 如果是true,  fprs与fprc之间消息加密, 默认 false
use_encryption = true
# fprs与fprc之间消息是否压缩
use_compression = true
# remote port listen by frps 远程端口通过frps进行监听
remote_port = 6001

[ssh_random]
type = tcp
local_ip = 127.0.0.1
local_port = 22
# 如果remote_port为0，则frps将为您指定一个随机端口
remote_port = 0

# 如果您想公开多个端口, 请在部分名称中添加前缀 "range:"
# FRPC将生成多个代理，如“tcp_port_6010”，“tcp_port_6011”等.
[range:tcp_port]
type = tcp
local_ip = 127.0.0.1
local_port = 6010-6020,6022,6024-6028
remote_port = 6010-6020,6022,6024-6028
use_encryption = false
use_compression = false

[dns]
type = udp
local_ip = 8.8.8.8
local_port = 53
remote_port = 6002
use_encryption = false
use_compression = false

[range:udp_port]
type = udp
local_ip = 127.0.0.1
local_port = 6010-6020
remote_port = 6010-6020
use_encryption = false
use_compression = false

# 将您的域名与frps中的[server_addr]绑定，你就可以用http://web01.域名 和 http://web02.域名 分别浏览web01和web02
[web01]
type = http
local_ip = 127.0.0.1
local_port = 80
use_encryption = false
use_compression = true
# 账号和密码
# http_user = admin
# http_pwd = admin
#子域名
subdomain = web01
# 设置您的域名
custom_domains = web01.域名
# 位置请求只适用于http
locations = /,/pic
host_header_rewrite = example.com

[web02]
type = https
local_ip = 127.0.0.1
local_port = 8000
use_encryption = false
use_compression = false 
subdomain = web01
custom_domains = web02.yourdomain.com

#插件
[plugin_unix_domain_socket]
type = tcp
remote_port = 6003
# if plugin is defined, local_ip and local_port is useless 如果定义了插件，local_ip和local_port不起作用
# plugin will handle connections got from frps 插件会从frps中取得连接
plugin = unix_domain_socket
# params set with prefix "plugin_" that plugin needed 插件需要设置的前缀
plugin_unix_path = /var/run/docker.sock

[plugin_http_proxy]
type = tcp
remote_port = 6004
plugin = http_proxy
plugin_http_user = abc
plugin_http_passwd = abc

[plugin_socks5]
type = tcp
remote_port = 6005
plugin = socks5
plugin_user = abc
plugin_passwd = abc

[plugin_static_file]
type = tcp
remote_port = 6006
plugin = static_file
plugin_local_path = /var/www/blog
plugin_strip_prefix = static
plugin_http_user = abc
plugin_http_passwd = abc

[secret_tcp]
# If the type is secret tcp, remote_port is useless 如果设置加密tcp，remote_port不起作用
# Who want to connect local port should deploy another frpc with stcp proxy and role is visitor
type = stcp
# sk 用于身份验证
sk = abcdefg
local_ip = 127.0.0.1
local_port = 22
use_encryption = false
use_compression = false

# user of frpc should be same in both stcp server and stcp visitor
[secret_tcp_visitor]
# frpc role visitor -> frps -> frpc role server
role = visitor
type = stcp
# the server name you want to visitor
server_name = secret_tcp
sk = abcdefg
# connect this address to visitor stcp server
bind_addr = 127.0.0.1
bind_port = 9000
use_encryption = false
use_compression = false

[p2p_tcp]
type = xtcp
sk = abcdefg
local_ip = 127.0.0.1
local_port = 22
use_encryption = false
use_compression = false

[p2p_tcp_visitor]
role = visitor
type = xtcp
server_name = p2p_tcp
sk = abcdefg
bind_addr = 127.0.0.1
bind_port = 9001
use_encryption = false
use_compression = false
